# create namespace
# => kubectl create namespace dm-benchmark-multiple-es-ztoo
# switch namespace
# => kubectl config set-context --current --namespace=dm-benchmark-multiple-es-ztoo
#
#
# to make template invoke the following:
# => helm dependency update charts/zeebe-benchmark && helm template dm-bmrk-m-ztoo charts/zeebe-benchmark -f kind/multiple-es-instances-ztoo-enabled-values.yaml --output-dir out/multiple/multiple-es-ztoo-enabled-values
#
# to install charts invoke the following:
# => helm dependency update charts/zeebe-benchmark && helm install dm-bmrk-m-ztoo charts/zeebe-benchmark -f kind/multiple-es-instances-ztoo-enabled-values.yaml --render-subchart-notes
#
# to uninstall charts invoke the following:
# => helm uninstall dm-bmrk-m-ztoo && kubectl delete pvc -l app.kubernetes.io/instance=dm-bmrk-m-ztoo && kubectl delete pvc -l release=dm-bmrk-m-ztoo
#
# delete namespace
# => kubectl delete namespace dm-benchmark-multiple-es-ztoo
#

global:
  identity:
    auth:
      enabled: false

camunda-platform:
  global:
    elasticsearch:
      zeebe:
        host: "{{ .Release.Name }}-elasticsearch-zeebe"
        clusterName: "zeebe-cluster"
      tasklist:
        host: "{{ .Release.Name }}-elasticsearch-tasklist"
        clusterName: "tasklist-cluster"
      operate:
        host: "{{ .Release.Name }}-elasticsearch-operate"
        clusterName: "operate-cluster"
      optimize:
        host: "{{ .Release.Name }}-elasticsearch-optimize"
        clusterName: "optimize-cluster"
  zeebe:
    # ZEEBE_BROKER_THREADS_CPUTHREADCOUNT
    #cpuThreadCount: "3"
    # ZEEBE_BROKER_THREADS_IOTHREADCOUNT
    #ioThreadCount: "3"
    #env:
      #- name: ZEEBE_BROKER_DATA_DISKUSAGEREPLICATIONWATERMARK
        #value: "0.87"
      #- name: ZEEBE_BROKER_DATA_DISKUSAGECOMMANDWATERMARK
        #value: "0.85"
    #resources:
      #limits:
        #memory: "4Gi"
        #cpu: "2000m"
      #requests:
        #memory: "4Gi"
        #cpu: "1350m"
    retention:
      enabled: true
      ## @param zeebe.retention.minimumAge defines how old the data must be, before the data is deleted as a duration.
      minimumAge: 1h

  #zeebe-gateway:
    #env:
      #- name: ZEEBE_GATEWAY_THREADS_MANAGEMENTTHREADS
        #value: "2"
    #resources:
      #limits:
        #memory: "2Gi"
        #cpu: "2"
      #requests:
        #memory: "1Gi"
        #cpu: "1"

  operate:
    enabled: true
    resources:
      limits:
        memory: "2Gi"
        cpu: "1000m"
      requests:
        memory: "250Mi"
        cpu: "400m"
    retention:
      enabled: true
      minimumAge: 1h

  tasklist:
    enabled: true
    resources:
      limits:
        memory: "1Gi"
        cpu: "1"
      requests:
        memory: "400Mi"
        cpu: "400m"
    retention:
      enabled: true
      minimumAge: 1h

  identity:
    enabled: false

  optimize:
    enabled: true
    resources:
      limits:
        memory: "4Gi"
        cpu: "1500m"
      requests:
        memory: "1500Mi"
        cpu: "500m"
    retention:
      enabled: trues
      # triggered every 15 minutes => https://crontab.guru/#*/15_*_*_*_*
      cronTrigger: "*/15 * * * *"
      # https://docs.oracle.com/javase/9/docs/api/java/time/Period.html#parse-java.lang.CharSequence-
      ttl: "P1D"
      processDataCleanup:
        enabled: true
      decisionDataCleanup:
        enabled: true
      ingestedEventCleanup:
        enabled: true
      externalVariableCleanup:
        enabled: true
    archiver:
      enabled: true

  elasticsearch:
    enabled: false

  elasticsearch-zeebe:
    enabled: true
    master:
      replicaCount: 2
      resources:
        limits:
          memory: "3Gi"
          cpu: "1"
        requests:
          memory: "2Gi"
          cpu: "500m"

  elasticsearch-tasklist:
    enabled: true
    master:
      replicaCount: 1
      resources:
        limits:
          memory: "3Gi"
          cpu: "1"
        requests:
          memory: "2Gi"
          cpu: "500m"

  elasticsearch-operate:
    enabled: true
    master:
      replicaCount: 1
      resources:
        limits:
          memory: "3Gi"
          cpu: "1"
        requests:
          memory: "2Gi"
          cpu: "500m"

  elasticsearch-optimize:
    enabled: true
    master:
      replicaCount: 1
      persistence:
        size: 128Gi
      resources:
        limits:
          memory: "3Gi"
          cpu: "1"
        requests:
          memory: "2Gi"
          cpu: "500m"

starter:
  rate: 5

worker:
  replicas: 1

timer:
  replicas: 1
  rate: 5

publisher:
  replicas: 1
  rate: 5

retentionPolicy:
  enabled: false
  # Every 5 minutes => https://crontab.guru/#*/5_*_*_*_*
  schedule: "*/5 * * * *"
  policies:
    - name: zeebe-
      maxSize:
      unit: minutes
      timeToLive: 5
    - name: operate-
      unit: minutes
      timeToLive: 5
    - name: tasklist-
      unit: minutes
      timeToLive: 5
    # the following are not consumed by operate so we want to get rid of them rather quickly
    - name: zeebe-record_message
      maxSize: 1
    - name: zeebe-record_process-instance-creation
      maxSize: 1
  client:
    hosts:
      - "http://RELEASE_NAME-elasticsearch-zeebe-master-hl:9200"
      - "http://RELEASE_NAME-elasticsearch-tasklist-master-hl:9200"
      - "http://RELEASE_NAME-elasticsearch-operate-master-hl:9200"

prometheus-elasticsearch-exporter:
  enabled: false

prometheus-elasticsearch-exporter-zeebe:
  enabled: true
  es:
    uri: http://{{ .Release.Name }}-elasticsearch-zeebe:9200
  serviceMonitor:
    enabled: true
    labels:
      release: monitoring

prometheus-elasticsearch-exporter-tasklist:
  enabled: true
  es:
    uri: http://{{ .Release.Name }}-elasticsearch-tasklist:9200
  serviceMonitor:
    enabled: true
    labels:
      release: monitoring

prometheus-elasticsearch-exporter-operate:
  enabled: true
  es:
    uri: http://{{ .Release.Name }}-elasticsearch-operate:9200
  serviceMonitor:
    enabled: true
    labels:
      release: monitoring

prometheus-elasticsearch-exporter-optimize:
  enabled: true
  es:
    uri: http://{{ .Release.Name }}-elasticsearch-optimize:9200
  serviceMonitor:
    enabled: true
    labels:
      release: monitoring