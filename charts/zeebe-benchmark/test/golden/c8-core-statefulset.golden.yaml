---
# Source: zeebe-benchmark/charts/camunda-platform/templates/core/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: benchmark-test-core
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: benchmark-test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    app.kubernetes.io/component: core
    app.kubernetes.io/version: "8.7.0-alpha1"
  annotations:
spec:
  replicas: 3
  selector:
    matchLabels:
      app: camunda-platform
      app.kubernetes.io/name: camunda-platform
      app.kubernetes.io/instance: benchmark-test
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: camunda-platform
      app.kubernetes.io/component: core
  serviceName: benchmark-test-core
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: camunda-platform
        app.kubernetes.io/name: camunda-platform
        app.kubernetes.io/instance: benchmark-test
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: camunda-platform
        app.kubernetes.io/component: core
        app.kubernetes.io/version: "8.7.0-alpha1"
      annotations:
        checksum/config: 0af99dfd865b4e2b8dcd8ea4defec2b16e5ffee41fa37cedc969f502c6d3824e
    spec:
      imagePullSecrets:
        []
      initContainers:
        []
      containers:
        - name: core
          image: camunda/camunda:8.7.0-alpha1
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          command: ["bash", "/usr/local/bin/startup.sh"]
          env:
            - name: CAMUNDA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: benchmark-test-camunda-platform-license
                  key: CAMUNDA_LICENSE_KEY
            - name: LC_ALL
              value: C.UTF-8
            - name: K8S_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_SERVICE_NAME
              value: benchmark-test-core
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: VALUES_CAMUNDA_CORE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: benchmark-test-core-identity-secret
                  key: core-secret
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/zeebe/data -XX:ErrorFile=/usr/local/zeebe/data/zeebe_error%p.log -XX:+ExitOnOutOfMemoryError"
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 26501
              name: command
            - containerPort: 26502
              name: internal
            - containerPort: 9600
              name: server
            - containerPort: 26500
              name: gateway
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              scheme: HTTP
              port: 9600
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 960m
              memory: 1920Mi
            requests:
              cpu: 800m
              memory: 1200Mi
          volumeMounts:
            - name: config
              mountPath: /usr/local/bin/startup.sh
              subPath: startup.sh
            - name: data
              mountPath: /usr/local/camunda/data
            - name: exporters
              mountPath: /exporters
            - mountPath: /tmp
              name: tmp
            - name: config
              mountPath: /usr/local/camunda/config/application.yaml
              subPath: application.yaml
      volumes:
        - name: config
          configMap:
            name: benchmark-test-core-configuration
            defaultMode: 492
        - name: exporters
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      serviceAccountName: benchmark-test-core
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
# yamllint disable
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - core
            topologyKey: kubernetes.io/hostname
# yamllint enable
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          {}
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: "32Gi"