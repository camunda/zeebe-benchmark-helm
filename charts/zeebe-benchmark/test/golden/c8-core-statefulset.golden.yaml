---
# Source: zeebe-benchmark/charts/camunda-platform/templates/orchestration/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: camunda
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: benchmark-test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    app.kubernetes.io/component: zeebe-broker
    app.kubernetes.io/version: "SNAPSHOT"
  annotations:
spec:
  replicas: 3
  selector:
    matchLabels:
      app: camunda-platform
      app.kubernetes.io/name: camunda-platform
      app.kubernetes.io/instance: benchmark-test
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: camunda-platform
      app.kubernetes.io/component: zeebe-broker
  serviceName: camunda
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: camunda-platform
        app.kubernetes.io/name: camunda-platform
        app.kubernetes.io/instance: benchmark-test
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: camunda-platform
        app.kubernetes.io/component: zeebe-broker
        app.kubernetes.io/version: "SNAPSHOT"
      annotations:
        checksum/config: 537e3048877ed1746df49a8affe5b641d181fd134b20b246da51a0cbd4f3ceaa
    spec:
      imagePullSecrets:
        []
      initContainers:
        []
      containers:
        - name: orchestration
          image: camunda/camunda:SNAPSHOT
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          command: ["bash", "/usr/local/bin/startup.sh"]
          env:
            
            - name: LC_ALL
              value: C.UTF-8
            - name: K8S_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_SERVICE_NAME
              value: camunda
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=25.0 -XX:+ExitOnOutOfMemoryError -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/camunda/data -XX:ErrorFile=/usr/local/camunda/data/zeebe_error%p.log -XX:NativeMemoryTracking=summary -Xlog:gc*:file=/usr/local/camunda/data/gc.log:time:filecount=7,filesize=8M"
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ZEEBE_LOG_APPENDER
              value: Stackdriver
            - name: ZEEBE_LOG_STACKDRIVER_SERVICENAME
              value: zeebe
            - name: ZEEBE_LOG_STACKDRIVER_SERVICEVERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ATOMIX_LOG_LEVEL
              value: INFO
            - name: ZEEBE_LOG_LEVEL
              value: DEBUG
            - name: SPRING_CONFIG_ADDITIONALLOCATION
              value: /usr/local/camunda/config/benchmark-config.yaml
            - name: JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  key: java-opts
                  name: zeebe-config
                  optional: true
            
          envFrom:
            - configMapRef:
                name: benchmark-test-camunda-platform-documentstore-env-vars
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 26501
              name: command
            - containerPort: 26502
              name: internal
            - containerPort: 9600
              name: server
            - containerPort: 26500
              name: gateway
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              scheme: HTTP
              port: 9600
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 2000m
              memory: 2Gi
          volumeMounts:
            - name: config
              mountPath: /usr/local/bin/startup.sh
              subPath: startup.sh
            - name: data
              mountPath: /usr/local/camunda/data
            - name: exporters
              mountPath: /exporters
            - mountPath: /tmp
              name: tmp
            - name: config
              mountPath: /usr/local/camunda/config/application.yaml
              subPath: application.yaml
            
            - mountPath: /usr/local/camunda/config/benchmark-config.yaml
              name: benchmark-config
              subPath: benchmark-config.yaml
            - mountPath: /usr/local/camunda/logs
              name: logs
      volumes:
        - name: config
          configMap:
            name: camunda-configuration
            defaultMode: 492
        - name: exporters
          emptyDir: {}
        - name: tmp
          emptyDir: {}
          
        - configMap:
            defaultMode: 492
            name: benchmark-config
          name: benchmark-config
        - emptyDir: {}
          name: logs
      serviceAccountName: camunda
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      nodeSelector:
        cloud.google.com/gke-nodepool: n2-standard-4
# yamllint disable
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - zeebe-broker
            topologyKey: kubernetes.io/hostname
# yamllint enable
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        annotations:
          {}
      spec:
        accessModes: [ReadWriteOnce]
        storageClassName: ssd
        resources:
          requests:
            storage: "64Gi"